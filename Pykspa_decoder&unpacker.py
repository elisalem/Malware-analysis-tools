
import pefile
import binascii

# This script receive file path, deobfuscate & unpack Pykspa malware - made by Eli Salem


def decryptBlob(encBlobu):                   # decryption algorithm
    out = ''
    for i in range (0,len(encBlobu)):
        out += chr(0xff & (ord(encBlobu[i]) - ord('r') - i))
    return out

def extractDataFromBinary(file):              # get the data section from the binary
    pe = pefile.PE(file)
    for section in pe.sections:
        if ".data" in section.Name:
            return section.get_data()


def dataAlignment(data):                       # cut and allign the extracted data
    returnhex = binascii.hexlify(data)
    for i in range (0, len(returnhex)):
        test = returnhex[i]
        if "b" in returnhex[i]:
            if "f" in returnhex[i+1]:
                cuttedhex = returnhex[i:]
                cuttedhex2 = cuttedhex[0:139280]               # first dll in the chunck
                cuttedhex3 = cuttedhex[139280:655360]          # second executable in the chunk
                return cuttedhex2,cuttedhex3


def decryptAndSaveToFile(array1, array2):      # decrypt and unhex, then save to file
    decrypted1 = decryptBlob(binascii.unhexlify(array1))
    decrypted2 = decryptBlob(binascii.unhexlify(array2))

    f = open("firstbin.bin", "wb")
    f.write(decrypted1)
    f.close()

    f2 = open("secondbin.bin", "wb")
    f2.write(decrypted2)
    f2.close()

def main():

    packedSample = raw_input('enter the path of the binary: ')
    returnedData = extractDataFromBinary(packedSample)
    array1,array2 = dataAlignment(returnedData)
    decryptAndSaveToFile(array1,array2)





if __name__ == "__main__":
    main()
